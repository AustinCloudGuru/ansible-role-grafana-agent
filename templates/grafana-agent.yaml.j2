server:
  log_level: {{ grafana_agent_log_level }}
{% if grafana_agent_http_listen_address is defined %}
  http_listen_address: {{ grafana_agent_http_listen_address }}
{% endif %}
{% if grafana_agent_http_port is defined %}
  http_listen_address: {{ grafana_agent_http_port }}
{% endif %}

metrics:
  global:
    scrape_interval: {{ grafana_agent_scrape_interval }}
    external_labels: 
{% for item in grafana_agent_external_labels %}
      {{ item }}: {{ grafana_agent_external_labels[item]}}
{% endfor %}
      
  wal_directory: /var/lib/grafana-agent/grafana-agent-wal
  configs:
  - name: metrics
    scrape_configs:
      - job_name: external_node_exporter
        static_configs:
          - targets:
            - localhost:9090
        metrics_path: /metrics
        relabel_configs:
            - target_label: instance
              replacement: {{ ansible_hostname }}
    remote_write:
      - url: {{ grafana_agent_config['prometheus-url'] }}
        basic_auth:
          username: {{ grafana_agent_config['prometheus-id'] }}
          password: {{ grafana_agent_config['api-key'] }}

integrations:
  node_exporter:
    enabled: true
    instance: {{ ansible_hostname }}
  prometheus_remote_write:
    - url: {{ grafana_agent_config['prometheus-url'] }}
      basic_auth:
        username: {{ grafana_agent_config['prometheus-id'] }}
        password: {{ grafana_agent_config['api-key'] }}

{% if grafana_agent_logs is defined %}
logs:
  positions_directory: /var/lib/grafana-agent/log_positions
  configs:
    - name: integrations
      clients:
        - url: {{ grafana_agent_config['loki-url'] }}
          basic_auth:
            username: {{ grafana_agent_config['loki-id'] }}
            password: {{ grafana_agent_config['api-key'] }}
      scrape_configs:
{% for log in grafana_agent_logs %}
        - job_name: {{ log.job_name }}
          static_configs:
{% for path in log.log_paths %}
            - targets:
                - localhost
              labels:
                hostname: {{ ansible_hostname }}
                instance: {{ ansible_hostname }}
                job: {{ log.job_name }}
                __path__: {{ path }}
{% endfor %}
{% endfor %}
{% endif %}
